import type { INode } from 'svgson';
import Random from './random';
import Color from './color';
import Parser from './parser';
import type { Options } from './options';
/**
 * @deprecated use `Style` type instead.
 */
export declare type SpriteCollection<O = {}> = (random: Random, options?: O & Options) => string | INode;
/**
 * @deprecated use `createAvatar` function instead.
 */
export default class Avatars<O extends {}> {
    static random: typeof Random;
    static color: typeof Color;
    static parser: typeof Parser;
    protected spriteCollection: SpriteCollection<O>;
    protected defaultOptions?: O & Options;
    /**
    * @param spriteCollection
    */
    constructor(spriteCollection: SpriteCollection<O>, defaultOptions?: O & Options);
    /**
    * Creates an avatar
    *
    * @param seed
    */
    create(seed?: string, options?: O & Options): string;
    private isBody;
}
